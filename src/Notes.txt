------------------------------TestNG-------------------------------------
TestNG:
is a testing tool that helps us to structure our test cases using different annotations

Benefits of NG:
1. Reports
2. Annotations e.g.@Test, @before, @beforeclass
3. Parallel testing
4. batch execution
5. Assertions ---> Hard Assertions, SoftAssertions
6. Data Parameterization

it can be itegrated with cucmber, maven, and selenium.

1. Annotations:
There is no need for a main method.

--> annotation is a tag that provides additional information about a class, interface, or method in TestNG
--> anotation is used to keep the structure of our test cases.

@Test
@BeforeMethod
@AfterMethod
@BeforeClass
@AfterClass

1. @Test
You should write your test cases under this ammotation.
This is the main annotation in TestNG
By default TestNG executes the methods in alphabetical order.

2. @BeforeMethod:
runs every time before the @test is executed
also called pre condition

3. @AfterMethod:
runs after each @test method
also called post condition

before method is a a precondition that must run before every trst case and the post condition will run afer
the test case has ended

Priority:
by default the prority is zero of all the test case
in order to give them a priority order
use @Test(priority = 1)

Enabled:
@Test(enabled = false) --> will not run the test cases that are set false
be default, all test cases are set to enabled = true

DependsOn:
@Test(dependsOnMethods = "methodName")
will only run if the dependent method has passed successfully, else it will be skipped

HardAssertions:
we have hardAssertion in testNG
in order to use the assertion we use

Assert.assertiontype()

Assert.assertTrue();

1. Assert.assertEquals(String1, String2);
it passes if String1 equals String2
it fails if String1 does not equal to String 2

2. Assert.assertTrue(boolean variable);
checks the status of a boolean variable
it passes if the boolean is TRUE
it fails if the boolean is FALSE

In hard Assertions, if we have multiple assertions, as soon as one of them fails,
it quits checking the other assertions and declared the test case as failed

SoftAssertions:
soft assertions continues to check all the assertions regardless of the fact even if one or more assertions
have failed, which is not the scenario in case of Hard Assertions(they stop execution when even one assertion fails).

in order to use soft assertion
1. declaration

SoftAssert soft = new SoftAssert();

2. soft.assertEquals(String, String) instead of Assert.assertEquals(String, String)

at the end, you must do

3. soft.assertAll();

After the declaration when you use soft.assert, it just checks the assertion, but
does not take any action or display any output.

Once all the assertions are done, then you use
soft.assertAll();
to complie the result of all the assertion and show you the results on the screen.

